import * as React from 'react';

import {TErrorBoundaryState} from './ErrorBoundaryTypes';
import errorBoundaryStyles from './ErrorBoundary.module.scss';

interface IErrorBoundary {

}

export default class ErrorBoundary extends React.Component<IErrorBoundary, TErrorBoundaryState> {
  constructor(props: IErrorBoundary) {
    super(props);
    this.state = {hasError: false};
  }

  static getDerivedStateFromError(error: string) {
    console.log('–ü–æ–π–º–∞–ª–∏ –æ—à–∏–±–∫—É:', error);
    return {hasError: true};
  }

  override componentDidCatch(error: Error, info: React.ErrorInfo) {
    console.log('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞!', error, info);
  }

  override render(): React.ReactNode {
    if (this.state.hasError) {
      return (
        <div className={errorBoundaryStyles.root}>
          <h1 className={`${errorBoundaryStyles.title} text text_type_main-large`}>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò¢</h1>
          <p className={`${errorBoundaryStyles.description} text text_type_main-medium`}>
            –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </p>
        </div>
      );
    }
    return this.props.children;
  }
}